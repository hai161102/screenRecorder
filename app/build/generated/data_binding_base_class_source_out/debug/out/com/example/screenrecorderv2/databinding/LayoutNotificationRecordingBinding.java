// Generated by view binder compiler. Do not edit!
package com.example.screenrecorderv2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.screenrecorderv2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutNotificationRecordingBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView imvRecord;

  @NonNull
  public final FrameLayout layout;

  @NonNull
  public final LinearLayout notiClose;

  @NonNull
  public final LinearLayout notiPause;

  @NonNull
  public final LinearLayout notiPlay;

  @NonNull
  public final LinearLayout notiStop;

  @NonNull
  public final LinearLayout notiTools;

  @NonNull
  public final TextView tvClose;

  @NonNull
  public final TextView tvPause;

  @NonNull
  public final TextView tvResume;

  @NonNull
  public final TextView tvStop;

  @NonNull
  public final TextView tvTools;

  private LayoutNotificationRecordingBinding(@NonNull FrameLayout rootView,
      @NonNull ImageView imvRecord, @NonNull FrameLayout layout, @NonNull LinearLayout notiClose,
      @NonNull LinearLayout notiPause, @NonNull LinearLayout notiPlay,
      @NonNull LinearLayout notiStop, @NonNull LinearLayout notiTools, @NonNull TextView tvClose,
      @NonNull TextView tvPause, @NonNull TextView tvResume, @NonNull TextView tvStop,
      @NonNull TextView tvTools) {
    this.rootView = rootView;
    this.imvRecord = imvRecord;
    this.layout = layout;
    this.notiClose = notiClose;
    this.notiPause = notiPause;
    this.notiPlay = notiPlay;
    this.notiStop = notiStop;
    this.notiTools = notiTools;
    this.tvClose = tvClose;
    this.tvPause = tvPause;
    this.tvResume = tvResume;
    this.tvStop = tvStop;
    this.tvTools = tvTools;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutNotificationRecordingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutNotificationRecordingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_notification_recording, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutNotificationRecordingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imv_record;
      ImageView imvRecord = rootView.findViewById(id);
      if (imvRecord == null) {
        break missingId;
      }

      FrameLayout layout = (FrameLayout) rootView;

      id = R.id.noti_close;
      LinearLayout notiClose = rootView.findViewById(id);
      if (notiClose == null) {
        break missingId;
      }

      id = R.id.noti_pause;
      LinearLayout notiPause = rootView.findViewById(id);
      if (notiPause == null) {
        break missingId;
      }

      id = R.id.noti_play;
      LinearLayout notiPlay = rootView.findViewById(id);
      if (notiPlay == null) {
        break missingId;
      }

      id = R.id.noti_stop;
      LinearLayout notiStop = rootView.findViewById(id);
      if (notiStop == null) {
        break missingId;
      }

      id = R.id.noti_tools;
      LinearLayout notiTools = rootView.findViewById(id);
      if (notiTools == null) {
        break missingId;
      }

      id = R.id.tv_close;
      TextView tvClose = rootView.findViewById(id);
      if (tvClose == null) {
        break missingId;
      }

      id = R.id.tv_pause;
      TextView tvPause = rootView.findViewById(id);
      if (tvPause == null) {
        break missingId;
      }

      id = R.id.tv_resume;
      TextView tvResume = rootView.findViewById(id);
      if (tvResume == null) {
        break missingId;
      }

      id = R.id.tv_stop;
      TextView tvStop = rootView.findViewById(id);
      if (tvStop == null) {
        break missingId;
      }

      id = R.id.tv_tools;
      TextView tvTools = rootView.findViewById(id);
      if (tvTools == null) {
        break missingId;
      }

      return new LayoutNotificationRecordingBinding((FrameLayout) rootView, imvRecord, layout,
          notiClose, notiPause, notiPlay, notiStop, notiTools, tvClose, tvPause, tvResume, tvStop,
          tvTools);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
