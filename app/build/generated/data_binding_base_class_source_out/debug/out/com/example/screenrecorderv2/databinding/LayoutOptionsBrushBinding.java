// Generated by view binder compiler. Do not edit!
package com.example.screenrecorderv2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.screenrecorderv2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutOptionsBrushBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox imgBrush;

  @NonNull
  public final ImageView imgCamera;

  @NonNull
  public final ImageView imgClose;

  @NonNull
  public final CheckBox imgEraser;

  @NonNull
  public final ImageView imgPaint;

  private LayoutOptionsBrushBinding(@NonNull LinearLayout rootView, @NonNull CheckBox imgBrush,
      @NonNull ImageView imgCamera, @NonNull ImageView imgClose, @NonNull CheckBox imgEraser,
      @NonNull ImageView imgPaint) {
    this.rootView = rootView;
    this.imgBrush = imgBrush;
    this.imgCamera = imgCamera;
    this.imgClose = imgClose;
    this.imgEraser = imgEraser;
    this.imgPaint = imgPaint;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutOptionsBrushBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutOptionsBrushBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_options_brush, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutOptionsBrushBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgBrush;
      CheckBox imgBrush = rootView.findViewById(id);
      if (imgBrush == null) {
        break missingId;
      }

      id = R.id.imgCamera;
      ImageView imgCamera = rootView.findViewById(id);
      if (imgCamera == null) {
        break missingId;
      }

      id = R.id.imgClose;
      ImageView imgClose = rootView.findViewById(id);
      if (imgClose == null) {
        break missingId;
      }

      id = R.id.imgEraser;
      CheckBox imgEraser = rootView.findViewById(id);
      if (imgEraser == null) {
        break missingId;
      }

      id = R.id.imgPaint;
      ImageView imgPaint = rootView.findViewById(id);
      if (imgPaint == null) {
        break missingId;
      }

      return new LayoutOptionsBrushBinding((LinearLayout) rootView, imgBrush, imgCamera, imgClose,
          imgEraser, imgPaint);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
