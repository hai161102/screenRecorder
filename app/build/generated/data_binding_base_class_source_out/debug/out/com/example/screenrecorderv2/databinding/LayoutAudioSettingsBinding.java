// Generated by view binder compiler. Do not edit!
package com.example.screenrecorderv2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.screenrecorderv2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutAudioSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout containerRecordAudio;

  @NonNull
  public final AppCompatImageView imvAudio;

  @NonNull
  public final AppCompatImageView imvNextAudio;

  @NonNull
  public final AppCompatTextView tvAudio;

  @NonNull
  public final AppCompatTextView valueAudio;

  private LayoutAudioSettingsBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout containerRecordAudio, @NonNull AppCompatImageView imvAudio,
      @NonNull AppCompatImageView imvNextAudio, @NonNull AppCompatTextView tvAudio,
      @NonNull AppCompatTextView valueAudio) {
    this.rootView = rootView;
    this.containerRecordAudio = containerRecordAudio;
    this.imvAudio = imvAudio;
    this.imvNextAudio = imvNextAudio;
    this.tvAudio = tvAudio;
    this.valueAudio = valueAudio;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutAudioSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutAudioSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_audio_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutAudioSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_record_audio;
      ConstraintLayout containerRecordAudio = rootView.findViewById(id);
      if (containerRecordAudio == null) {
        break missingId;
      }

      id = R.id.imv_audio;
      AppCompatImageView imvAudio = rootView.findViewById(id);
      if (imvAudio == null) {
        break missingId;
      }

      id = R.id.imv_next_audio;
      AppCompatImageView imvNextAudio = rootView.findViewById(id);
      if (imvNextAudio == null) {
        break missingId;
      }

      id = R.id.tv_audio;
      AppCompatTextView tvAudio = rootView.findViewById(id);
      if (tvAudio == null) {
        break missingId;
      }

      id = R.id.value_audio;
      AppCompatTextView valueAudio = rootView.findViewById(id);
      if (valueAudio == null) {
        break missingId;
      }

      return new LayoutAudioSettingsBinding((LinearLayout) rootView, containerRecordAudio, imvAudio,
          imvNextAudio, tvAudio, valueAudio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
