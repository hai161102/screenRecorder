// Generated by view binder compiler. Do not edit!
package com.example.screenrecorderv2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.screenrecorderv2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutNotificationMainBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView imvCapture;

  @NonNull
  public final ImageView imvCc;

  @NonNull
  public final ImageView imvHome;

  @NonNull
  public final ImageView imvRecord;

  @NonNull
  public final FrameLayout layout;

  @NonNull
  public final RelativeLayout notiExit;

  @NonNull
  public final RelativeLayout notiHome;

  @NonNull
  public final RelativeLayout notiRecord;

  @NonNull
  public final RelativeLayout notiScreenShot;

  @NonNull
  public final RelativeLayout notiTools;

  @NonNull
  public final TextView tvClose;

  @NonNull
  public final TextView tvHome;

  @NonNull
  public final TextView tvRecord;

  @NonNull
  public final TextView tvScreenshot;

  @NonNull
  public final TextView tvTools;

  private LayoutNotificationMainBinding(@NonNull FrameLayout rootView,
      @NonNull ImageView imvCapture, @NonNull ImageView imvCc, @NonNull ImageView imvHome,
      @NonNull ImageView imvRecord, @NonNull FrameLayout layout, @NonNull RelativeLayout notiExit,
      @NonNull RelativeLayout notiHome, @NonNull RelativeLayout notiRecord,
      @NonNull RelativeLayout notiScreenShot, @NonNull RelativeLayout notiTools,
      @NonNull TextView tvClose, @NonNull TextView tvHome, @NonNull TextView tvRecord,
      @NonNull TextView tvScreenshot, @NonNull TextView tvTools) {
    this.rootView = rootView;
    this.imvCapture = imvCapture;
    this.imvCc = imvCc;
    this.imvHome = imvHome;
    this.imvRecord = imvRecord;
    this.layout = layout;
    this.notiExit = notiExit;
    this.notiHome = notiHome;
    this.notiRecord = notiRecord;
    this.notiScreenShot = notiScreenShot;
    this.notiTools = notiTools;
    this.tvClose = tvClose;
    this.tvHome = tvHome;
    this.tvRecord = tvRecord;
    this.tvScreenshot = tvScreenshot;
    this.tvTools = tvTools;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutNotificationMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutNotificationMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_notification_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutNotificationMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imv_capture;
      ImageView imvCapture = rootView.findViewById(id);
      if (imvCapture == null) {
        break missingId;
      }

      id = R.id.imv_cc;
      ImageView imvCc = rootView.findViewById(id);
      if (imvCc == null) {
        break missingId;
      }

      id = R.id.imv_home;
      ImageView imvHome = rootView.findViewById(id);
      if (imvHome == null) {
        break missingId;
      }

      id = R.id.imv_record;
      ImageView imvRecord = rootView.findViewById(id);
      if (imvRecord == null) {
        break missingId;
      }

      FrameLayout layout = (FrameLayout) rootView;

      id = R.id.noti_exit;
      RelativeLayout notiExit = rootView.findViewById(id);
      if (notiExit == null) {
        break missingId;
      }

      id = R.id.noti_home;
      RelativeLayout notiHome = rootView.findViewById(id);
      if (notiHome == null) {
        break missingId;
      }

      id = R.id.noti_record;
      RelativeLayout notiRecord = rootView.findViewById(id);
      if (notiRecord == null) {
        break missingId;
      }

      id = R.id.noti_screen_shot;
      RelativeLayout notiScreenShot = rootView.findViewById(id);
      if (notiScreenShot == null) {
        break missingId;
      }

      id = R.id.noti_tools;
      RelativeLayout notiTools = rootView.findViewById(id);
      if (notiTools == null) {
        break missingId;
      }

      id = R.id.tv_close;
      TextView tvClose = rootView.findViewById(id);
      if (tvClose == null) {
        break missingId;
      }

      id = R.id.tv_home;
      TextView tvHome = rootView.findViewById(id);
      if (tvHome == null) {
        break missingId;
      }

      id = R.id.tv_record;
      TextView tvRecord = rootView.findViewById(id);
      if (tvRecord == null) {
        break missingId;
      }

      id = R.id.tv_screenshot;
      TextView tvScreenshot = rootView.findViewById(id);
      if (tvScreenshot == null) {
        break missingId;
      }

      id = R.id.tv_tools;
      TextView tvTools = rootView.findViewById(id);
      if (tvTools == null) {
        break missingId;
      }

      return new LayoutNotificationMainBinding((FrameLayout) rootView, imvCapture, imvCc, imvHome,
          imvRecord, layout, notiExit, notiHome, notiRecord, notiScreenShot, notiTools, tvClose,
          tvHome, tvRecord, tvScreenshot, tvTools);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
