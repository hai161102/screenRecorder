// Generated by view binder compiler. Do not edit!
package com.mtg.screenrecorder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.exoplayer2.ui.PlayerView;
import com.mtg.screenrecorder.R;
import idv.luchafang.videotrimmer.VideoTrimmerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVideoTrimBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final AppCompatTextView durationView;

  @NonNull
  public final ImageView imgPlay;

  @NonNull
  public final AppCompatImageView imvBack;

  @NonNull
  public final ImageView imvPlay;

  @NonNull
  public final RelativeLayout llVideoView;

  @NonNull
  public final PlayerView playerView;

  @NonNull
  public final SeekBar seekBarVideo;

  @NonNull
  public final AppCompatTextView toolbarTitle;

  @NonNull
  public final AppCompatTextView tvEndDuration;

  @NonNull
  public final AppCompatTextView tvStartDuration;

  @NonNull
  public final AppCompatTextView tvTrim;

  @NonNull
  public final TextView txtVideoLength;

  @NonNull
  public final VideoTrimmerView videoTrimmerView;

  private ActivityVideoTrimBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout container, @NonNull AppCompatTextView durationView,
      @NonNull ImageView imgPlay, @NonNull AppCompatImageView imvBack, @NonNull ImageView imvPlay,
      @NonNull RelativeLayout llVideoView, @NonNull PlayerView playerView,
      @NonNull SeekBar seekBarVideo, @NonNull AppCompatTextView toolbarTitle,
      @NonNull AppCompatTextView tvEndDuration, @NonNull AppCompatTextView tvStartDuration,
      @NonNull AppCompatTextView tvTrim, @NonNull TextView txtVideoLength,
      @NonNull VideoTrimmerView videoTrimmerView) {
    this.rootView = rootView;
    this.container = container;
    this.durationView = durationView;
    this.imgPlay = imgPlay;
    this.imvBack = imvBack;
    this.imvPlay = imvPlay;
    this.llVideoView = llVideoView;
    this.playerView = playerView;
    this.seekBarVideo = seekBarVideo;
    this.toolbarTitle = toolbarTitle;
    this.tvEndDuration = tvEndDuration;
    this.tvStartDuration = tvStartDuration;
    this.tvTrim = tvTrim;
    this.txtVideoLength = txtVideoLength;
    this.videoTrimmerView = videoTrimmerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVideoTrimBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVideoTrimBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_video_trim, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVideoTrimBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      FrameLayout container = rootView.findViewById(id);
      if (container == null) {
        break missingId;
      }

      id = R.id.durationView;
      AppCompatTextView durationView = rootView.findViewById(id);
      if (durationView == null) {
        break missingId;
      }

      id = R.id.imgPlay;
      ImageView imgPlay = rootView.findViewById(id);
      if (imgPlay == null) {
        break missingId;
      }

      id = R.id.imv_back;
      AppCompatImageView imvBack = rootView.findViewById(id);
      if (imvBack == null) {
        break missingId;
      }

      id = R.id.imv_play;
      ImageView imvPlay = rootView.findViewById(id);
      if (imvPlay == null) {
        break missingId;
      }

      id = R.id.llVideoView;
      RelativeLayout llVideoView = rootView.findViewById(id);
      if (llVideoView == null) {
        break missingId;
      }

      id = R.id.playerView;
      PlayerView playerView = rootView.findViewById(id);
      if (playerView == null) {
        break missingId;
      }

      id = R.id.seekBarVideo;
      SeekBar seekBarVideo = rootView.findViewById(id);
      if (seekBarVideo == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      AppCompatTextView toolbarTitle = rootView.findViewById(id);
      if (toolbarTitle == null) {
        break missingId;
      }

      id = R.id.tv_end_duration;
      AppCompatTextView tvEndDuration = rootView.findViewById(id);
      if (tvEndDuration == null) {
        break missingId;
      }

      id = R.id.tv_start_duration;
      AppCompatTextView tvStartDuration = rootView.findViewById(id);
      if (tvStartDuration == null) {
        break missingId;
      }

      id = R.id.tv_trim;
      AppCompatTextView tvTrim = rootView.findViewById(id);
      if (tvTrim == null) {
        break missingId;
      }

      id = R.id.txtVideoLength;
      TextView txtVideoLength = rootView.findViewById(id);
      if (txtVideoLength == null) {
        break missingId;
      }

      id = R.id.videoTrimmerView;
      VideoTrimmerView videoTrimmerView = rootView.findViewById(id);
      if (videoTrimmerView == null) {
        break missingId;
      }

      return new ActivityVideoTrimBinding((ConstraintLayout) rootView, container, durationView,
          imgPlay, imvBack, imvPlay, llVideoView, playerView, seekBarVideo, toolbarTitle,
          tvEndDuration, tvStartDuration, tvTrim, txtVideoLength, videoTrimmerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
