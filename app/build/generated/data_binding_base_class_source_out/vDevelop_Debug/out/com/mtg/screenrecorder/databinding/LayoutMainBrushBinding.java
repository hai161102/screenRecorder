// Generated by view binder compiler. Do not edit!
package com.mtg.screenrecorder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.mtg.screenrecorder.R;
import com.raed.drawingview.BrushView;
import com.raed.drawingview.DrawingView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMainBrushBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BrushView brushView;

  @NonNull
  public final ConstraintLayout containerColor;

  @NonNull
  public final DrawingView drawview;

  @NonNull
  public final ImageView imvClose;

  @NonNull
  public final LayoutOptionsBrushBinding layoutBrush;

  @NonNull
  public final RecyclerView rcv;

  @NonNull
  public final SeekBar sizeSeekBar;

  @NonNull
  public final TextView tvSize;

  private LayoutMainBrushBinding(@NonNull ConstraintLayout rootView, @NonNull BrushView brushView,
      @NonNull ConstraintLayout containerColor, @NonNull DrawingView drawview,
      @NonNull ImageView imvClose, @NonNull LayoutOptionsBrushBinding layoutBrush,
      @NonNull RecyclerView rcv, @NonNull SeekBar sizeSeekBar, @NonNull TextView tvSize) {
    this.rootView = rootView;
    this.brushView = brushView;
    this.containerColor = containerColor;
    this.drawview = drawview;
    this.imvClose = imvClose;
    this.layoutBrush = layoutBrush;
    this.rcv = rcv;
    this.sizeSeekBar = sizeSeekBar;
    this.tvSize = tvSize;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMainBrushBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMainBrushBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_main_brush, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMainBrushBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.brush_view;
      BrushView brushView = rootView.findViewById(id);
      if (brushView == null) {
        break missingId;
      }

      id = R.id.container_color;
      ConstraintLayout containerColor = rootView.findViewById(id);
      if (containerColor == null) {
        break missingId;
      }

      id = R.id.drawview;
      DrawingView drawview = rootView.findViewById(id);
      if (drawview == null) {
        break missingId;
      }

      id = R.id.imv_close;
      ImageView imvClose = rootView.findViewById(id);
      if (imvClose == null) {
        break missingId;
      }

      id = R.id.layout_brush;
      View layoutBrush = rootView.findViewById(id);
      if (layoutBrush == null) {
        break missingId;
      }
      LayoutOptionsBrushBinding binding_layoutBrush = LayoutOptionsBrushBinding.bind(layoutBrush);

      id = R.id.rcv;
      RecyclerView rcv = rootView.findViewById(id);
      if (rcv == null) {
        break missingId;
      }

      id = R.id.size_seek_bar;
      SeekBar sizeSeekBar = rootView.findViewById(id);
      if (sizeSeekBar == null) {
        break missingId;
      }

      id = R.id.tv_size;
      TextView tvSize = rootView.findViewById(id);
      if (tvSize == null) {
        break missingId;
      }

      return new LayoutMainBrushBinding((ConstraintLayout) rootView, brushView, containerColor,
          drawview, imvClose, binding_layoutBrush, rcv, sizeSeekBar, tvSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
