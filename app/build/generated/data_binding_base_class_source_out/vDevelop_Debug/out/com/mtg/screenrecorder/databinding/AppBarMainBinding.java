// Generated by view binder compiler. Do not edit!
package com.mtg.screenrecorder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.tabs.TabLayout;
import com.mtg.screenrecorder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppBarMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final ContentMainBinding contentMain;

  @NonNull
  public final TabLayout tablayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final AppCompatTextView toolbarTitle;

  private AppBarMainBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull ContentMainBinding contentMain, @NonNull TabLayout tablayout,
      @NonNull Toolbar toolbar, @NonNull AppCompatTextView toolbarTitle) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.contentMain = contentMain;
    this.tablayout = tablayout;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_bar_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppBarMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = rootView.findViewById(id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.content_main;
      View contentMain = rootView.findViewById(id);
      if (contentMain == null) {
        break missingId;
      }
      ContentMainBinding binding_contentMain = ContentMainBinding.bind(contentMain);

      id = R.id.tablayout;
      TabLayout tablayout = rootView.findViewById(id);
      if (tablayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      AppCompatTextView toolbarTitle = rootView.findViewById(id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new AppBarMainBinding((ConstraintLayout) rootView, appbar, binding_contentMain,
          tablayout, toolbar, toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
