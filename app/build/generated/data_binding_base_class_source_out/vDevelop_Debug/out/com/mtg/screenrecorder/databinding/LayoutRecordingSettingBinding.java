// Generated by view binder compiler. Do not edit!
package com.mtg.screenrecorder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.mtg.screenrecorder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutRecordingSettingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout containerCountDownTimer;

  @NonNull
  public final ConstraintLayout containerFloatingControl;

  @NonNull
  public final ConstraintLayout containerVibrate;

  @NonNull
  public final AppCompatImageView imvCountDownTimer;

  @NonNull
  public final AppCompatImageView imvFloatingControl;

  @NonNull
  public final AppCompatImageView imvNextCountDownTimer;

  @NonNull
  public final AppCompatImageView imvVibrate;

  @NonNull
  public final SwitchCompat swFloatingControl;

  @NonNull
  public final SwitchCompat swVibrate;

  @NonNull
  public final AppCompatTextView tvCountDownTimer;

  @NonNull
  public final AppCompatTextView tvFloatingControl;

  @NonNull
  public final AppCompatTextView tvVibrate;

  @NonNull
  public final AppCompatTextView valueCountDownTimer;

  @NonNull
  public final AppCompatTextView valueFloatingControl;

  @NonNull
  public final AppCompatTextView valueVibrate;

  private LayoutRecordingSettingBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout containerCountDownTimer,
      @NonNull ConstraintLayout containerFloatingControl,
      @NonNull ConstraintLayout containerVibrate, @NonNull AppCompatImageView imvCountDownTimer,
      @NonNull AppCompatImageView imvFloatingControl,
      @NonNull AppCompatImageView imvNextCountDownTimer, @NonNull AppCompatImageView imvVibrate,
      @NonNull SwitchCompat swFloatingControl, @NonNull SwitchCompat swVibrate,
      @NonNull AppCompatTextView tvCountDownTimer, @NonNull AppCompatTextView tvFloatingControl,
      @NonNull AppCompatTextView tvVibrate, @NonNull AppCompatTextView valueCountDownTimer,
      @NonNull AppCompatTextView valueFloatingControl, @NonNull AppCompatTextView valueVibrate) {
    this.rootView = rootView;
    this.containerCountDownTimer = containerCountDownTimer;
    this.containerFloatingControl = containerFloatingControl;
    this.containerVibrate = containerVibrate;
    this.imvCountDownTimer = imvCountDownTimer;
    this.imvFloatingControl = imvFloatingControl;
    this.imvNextCountDownTimer = imvNextCountDownTimer;
    this.imvVibrate = imvVibrate;
    this.swFloatingControl = swFloatingControl;
    this.swVibrate = swVibrate;
    this.tvCountDownTimer = tvCountDownTimer;
    this.tvFloatingControl = tvFloatingControl;
    this.tvVibrate = tvVibrate;
    this.valueCountDownTimer = valueCountDownTimer;
    this.valueFloatingControl = valueFloatingControl;
    this.valueVibrate = valueVibrate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutRecordingSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutRecordingSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_recording_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutRecordingSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_count_down_timer;
      ConstraintLayout containerCountDownTimer = rootView.findViewById(id);
      if (containerCountDownTimer == null) {
        break missingId;
      }

      id = R.id.container_floating_control;
      ConstraintLayout containerFloatingControl = rootView.findViewById(id);
      if (containerFloatingControl == null) {
        break missingId;
      }

      id = R.id.container_vibrate;
      ConstraintLayout containerVibrate = rootView.findViewById(id);
      if (containerVibrate == null) {
        break missingId;
      }

      id = R.id.imv_count_down_timer;
      AppCompatImageView imvCountDownTimer = rootView.findViewById(id);
      if (imvCountDownTimer == null) {
        break missingId;
      }

      id = R.id.imv_floating_control;
      AppCompatImageView imvFloatingControl = rootView.findViewById(id);
      if (imvFloatingControl == null) {
        break missingId;
      }

      id = R.id.imv_next_count_down_timer;
      AppCompatImageView imvNextCountDownTimer = rootView.findViewById(id);
      if (imvNextCountDownTimer == null) {
        break missingId;
      }

      id = R.id.imv_vibrate;
      AppCompatImageView imvVibrate = rootView.findViewById(id);
      if (imvVibrate == null) {
        break missingId;
      }

      id = R.id.sw_floating_control;
      SwitchCompat swFloatingControl = rootView.findViewById(id);
      if (swFloatingControl == null) {
        break missingId;
      }

      id = R.id.sw_vibrate;
      SwitchCompat swVibrate = rootView.findViewById(id);
      if (swVibrate == null) {
        break missingId;
      }

      id = R.id.tv_count_down_timer;
      AppCompatTextView tvCountDownTimer = rootView.findViewById(id);
      if (tvCountDownTimer == null) {
        break missingId;
      }

      id = R.id.tv_floating_control;
      AppCompatTextView tvFloatingControl = rootView.findViewById(id);
      if (tvFloatingControl == null) {
        break missingId;
      }

      id = R.id.tv_vibrate;
      AppCompatTextView tvVibrate = rootView.findViewById(id);
      if (tvVibrate == null) {
        break missingId;
      }

      id = R.id.value_count_down_timer;
      AppCompatTextView valueCountDownTimer = rootView.findViewById(id);
      if (valueCountDownTimer == null) {
        break missingId;
      }

      id = R.id.value_floating_control;
      AppCompatTextView valueFloatingControl = rootView.findViewById(id);
      if (valueFloatingControl == null) {
        break missingId;
      }

      id = R.id.value_vibrate;
      AppCompatTextView valueVibrate = rootView.findViewById(id);
      if (valueVibrate == null) {
        break missingId;
      }

      return new LayoutRecordingSettingBinding((LinearLayout) rootView, containerCountDownTimer,
          containerFloatingControl, containerVibrate, imvCountDownTimer, imvFloatingControl,
          imvNextCountDownTimer, imvVibrate, swFloatingControl, swVibrate, tvCountDownTimer,
          tvFloatingControl, tvVibrate, valueCountDownTimer, valueFloatingControl, valueVibrate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
